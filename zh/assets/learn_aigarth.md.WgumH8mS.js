import{_ as a,c as t,o as i,a5 as r}from"./chunks/framework.Dc8iq2K4.js";const e="/zh/assets/helix-logic-gate-65e30bc1a8a435988499c0475e724696.C1n7QxKo.png",u=JSON.parse('{"title":"Aigarth","description":"","frontmatter":{},"headers":[],"relativePath":"learn/aigarth.md","filePath":"learn/aigarth.md","lastUpdated":null}'),h={name:"learn/aigarth.md"},o=r('<h1 id="aigarth" tabindex="-1">Aigarth <a class="header-anchor" href="#aigarth" aria-label="Permalink to &quot;Aigarth&quot;">​</a></h1><h2 id="什么是-aigarth" tabindex="-1">什么是 Aigarth？ <a class="header-anchor" href="#什么是-aigarth" aria-label="Permalink to &quot;什么是 Aigarth？&quot;">​</a></h2><p>Aigarth 是基于 Qubic 的人工智能系统，其目标是推动第三项计划的实现。这个名字由两部分构成：“AI”，指的是“人工智慧”，以及“garth”，意指“小庭园”或“花园”。</p><p>Aigarth 正致力于使AI开发民主化并促进集体智能。通过利用矿工的算力， Aigarth 在人工智能领域开辟了新的合作与创新可能性。</p><p>Aigarth 的核心特性涵盖以下几点：</p><ul><li><strong>分布式人工智能训练：</strong> 我们借助 Qubic 矿工的强大计算能力，实现了对数量庞大的人工神经网络(ANNs)的创建和训练。这一模式下，分散的计算资源被聚合起来，为开发大规模、复杂的人工智能系统提供了可能。</li><li><strong>自我进化AI：</strong> 实施了一个“教师”神经网络（ANN），用于修改和改进其他神经网络，具有递归自我优化的可能性。</li><li><strong>公共可访问性:</strong> 通过结合 Qubic 的智能合约特性，Aigarth 将实现面向大众的可访问性与应用潜力。这一举措旨在促进 AI 技术的普惠与平等发展，让更多人参与到AI创新之中。</li><li><strong>现实世界整合：</strong> 利用 Qubic 的预言机观测外部世界，以及外包计算来执行实验并与环境交互。</li><li><strong>开源：</strong> 当 Aigarth 投入使用后，它会成为面向公众的开放源代码项目。</li></ul><p>Aigarth 融入 Qubic 生态系统，正朝着使AI发展更加民主化、促进群体智慧的方向迈出关键一步。通过运用分散式计算和开放合作的强大能力，Aigarth有望引领AI及其在不同行业应用的颠覆性革新。</p><h2 id="aigarth-如何运作" tabindex="-1">Aigarth 如何运作？ <a class="header-anchor" href="#aigarth-如何运作" aria-label="Permalink to &quot;Aigarth 如何运作？&quot;">​</a></h2><p>它是一种基于人工智能的软件系统，从近百万个称为 Qubic 矿工的计算资源中获取信息。这些 Qubic 矿工正在以惊人的速度增加数量，并利用其强大计算能力创造数十亿个体积庞大的人工神经网络（ANNs）。这些人工神经网络的任务是处理随机数据，通过压缩和解压来优化数据流过程。这一系列复杂的任务构成了 Aigarth 系统的一部分，其中包括一个核心组件——被称为“教师”的超高级 AI 模型。这个所谓的“教师”通过修改和优化每一个小的神经网络，提高了它们在完成压缩与解压缩任务时的效率。</p><p>举个例子，想象一下 AI 模型可以用来区分猫和狗。对于这个问题的解决方式，提出者会设置一种评价标准（称为适应度函数）来评估不同策略的好坏。参与者会使用一个特别设计的进化算法（Aigarth 的核心），并在实时情况下观察自己的解决方案与理想解的距离有多接近。</p><p>这个系统具有透明度，允许每个人都能了解到其他参与者的进展，既可以沿用他们的努力，也可以探索可能更为有成效的方向。这一机制类似于传统的劳动证明方式，但特别之处在于 Aigarth 的“采矿”操作不仅理论上有意义，在实践中也具有实用性。</p><h2 id="深入解析-螺旋式逻辑门原理" tabindex="-1">深入解析：螺旋式逻辑门原理 <a class="header-anchor" href="#深入解析-螺旋式逻辑门原理" aria-label="Permalink to &quot;深入解析：螺旋式逻辑门原理&quot;">​</a></h2><p>智能算法的核心组件是 Helix 逻辑门，这是 Aigarth 独特算法中的关键元素。它具备完全的功能并可以逆向操作，实现了简洁的逻辑处理：接受三个输入参数 A、B 和 C，并通过计算 A+B+C 的值后，以这些参数原来的位置顺序输出结果。这种设计使得在寻找高效解决方案的过程中表现出了显著优势，相较于随机选择的逻辑门，Helix 逻辑门明显提高了算法的效率和收敛性。</p><p><img src="'+e+'" alt="Helix Logic Gate"></p><p><em>Truth table and logic gate of the Helix gate</em></p>',15),l=[o];function g(n,s,c,A,p,_){return i(),t("div",null,l)}const b=a(h,[["render",g]]);export{u as __pageData,b as default};
